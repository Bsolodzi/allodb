% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tibble_eqn.R
\name{table_equations}
\alias{table_equations}
\alias{tibble_eqn}
\alias{tibble_site_eqn}
\alias{tibble_sp_eqn}
\alias{tibble_stem_eqn}
\title{Table allometric equations.}
\usage{
tibble_eqn(eqn, eqn_site, eqn_type = c("site", "species", "stem"),
  eqn_source = c("user", "default"))

tibble_site_eqn(eqn, eqn_site, ...)

tibble_sp_eqn(x, eqn, sp, eqn_site, ...)

tibble_stem_eqn(x, eqn, sp, stemid, dbh, eqn_site, ...)
}
\arguments{
\item{eqn}{Name of the variable in \code{x} giving allometric equations.}

\item{eqn_site}{Character string giving the name of the site.}

\item{eqn_source}{One of "user" or "default". Use "user" always, except
if you are a developer of \strong{allodb} and you are creating default tables
for ForestGEO.}

\item{x}{A dataframe, usually a ForestGEO-table.}

\item{sp}{Name of the variable in \code{x} species names.}

\item{stemid}{Name of the variable in \code{x} that uniquely identifies each stem.}

\item{dbh}{Name of the variable in \code{x} giving stem diameter.}
}
\value{
A dataframe.
}
\description{
Wrappers around \code{\link[=tibble_eqn]{tibble_eqn()}}. Use these functions to create tables of
allometric equations by site, species, and stem.
}
\examples{
# Enable a nice printing method.
library(tibble)

# Wrapper by site

tibble_site_eqn(eqn = "3 * dbh", eqn_site = "bci")

# Wrapper by species

# Your allometric equations by speces are likely in a table, e.g.:
eqn_by_sp <- tibble::tribble(~sp, ~equation,
                           "sp1", "3 * dbh",
                           "sp2", "7 * dbh",
                           "sp3", "5 * dbh")
eqn_by_sp

# Give the names of the variables with the relevant information.
tibble_sp_eqn(x = eqn_by_sp, eqn = "equation", sp = "sp", eqn_site = "bci")

# Wrapper by stem.

eqn_by_stem <- tibble::tribble(~sp,   ~equation,     ~id, ~dbh,
                               "sp1", "3 * dbh",     001,   40,
                               "sp1", "7 * dbh",     002,   15,
                               "sp1", "5 * dbh",     003,   40)
eqn_by_stem

# Give the names of the variables with the relevant information.
tibble_stem_eqn(x = eqn_by_stem, eqn = "equation", sp = "sp", stemid = "id",
  dbh = "dbh", eqn_site = "bci")
}
